name: Release

on:
  release:
    types: [published]

jobs:
  release:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download Build Artifact
      uses: actions/download-artifact@v4
      with:
        name: ReturnToMoriaServerManager
        path: ./release
        
    - name: Rename Artifact for Release
      run: |
        $version = "${{ github.event.release.tag_name }}"
        $oldName = "ReturnToMoriaServerManager-latest.zip"
        $newName = "ReturnToMoriaServerManager-$version.zip"
        
        if (Test-Path "./release/$oldName") {
          Rename-Item -Path "./release/$oldName" -NewName $newName
          Write-Host "Renamed artifact to $newName"
        } else {
          Write-Host "Artifact not found: $oldName"
          exit 1
        }
        
    - name: Upload Release Asset
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const path = require('path');
          
          const assetPath = path.join(process.env.GITHUB_WORKSPACE, 'release', `ReturnToMoriaServerManager-${context.payload.release.tag_name}.zip`);
          
          if (fs.existsSync(assetPath)) {
            console.log('Uploading release package...');
            await github.rest.repos.uploadReleaseAsset({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: context.payload.release.id,
              name: `ReturnToMoriaServerManager-${context.payload.release.tag_name}.zip`,
              data: fs.readFileSync(assetPath)
            });
            console.log('Upload successful!');
          } else {
            console.log('Release package not found!');
            core.setFailed('Release package not found');
          } 